
package calculatorApp;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Calculator", targetNamespace = "http://applicationserver/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Calculator {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://applicationserver/", className = "calculatorApp.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://applicationserver/", className = "calculatorApp.AddResponse")
    @Action(input = "http://applicationserver/Calculator/addRequest", output = "http://applicationserver/Calculator/addResponse")
    public double add(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "divide", targetNamespace = "http://applicationserver/", className = "calculatorApp.Divide")
    @ResponseWrapper(localName = "divideResponse", targetNamespace = "http://applicationserver/", className = "calculatorApp.DivideResponse")
    @Action(input = "http://applicationserver/Calculator/divideRequest", output = "http://applicationserver/Calculator/divideResponse")
    public double divide(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "substract", targetNamespace = "http://applicationserver/", className = "calculatorApp.Substract")
    @ResponseWrapper(localName = "substractResponse", targetNamespace = "http://applicationserver/", className = "calculatorApp.SubstractResponse")
    @Action(input = "http://applicationserver/Calculator/substractRequest", output = "http://applicationserver/Calculator/substractResponse")
    public double substract(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "modulus", targetNamespace = "http://applicationserver/", className = "calculatorApp.Modulus")
    @ResponseWrapper(localName = "modulusResponse", targetNamespace = "http://applicationserver/", className = "calculatorApp.ModulusResponse")
    @Action(input = "http://applicationserver/Calculator/modulusRequest", output = "http://applicationserver/Calculator/modulusResponse")
    public double modulus(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiply", targetNamespace = "http://applicationserver/", className = "calculatorApp.Multiply")
    @ResponseWrapper(localName = "multiplyResponse", targetNamespace = "http://applicationserver/", className = "calculatorApp.MultiplyResponse")
    @Action(input = "http://applicationserver/Calculator/multiplyRequest", output = "http://applicationserver/Calculator/multiplyResponse")
    public double multiply(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

}
